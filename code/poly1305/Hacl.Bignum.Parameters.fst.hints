[
  "áo$±¿„PÙÿ¾4\u0014¯„U'",
  [
    [
      "Hacl.Bignum.Parameters.clen",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.clen",
      2,
      2,
      1,
      [
        "@query", "b2t_def", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt32.n",
        "equation_Hacl.Bignum.Constants.len",
        "equation_Hacl.Bignum.Parameters.len", "equation_Prims.nat",
        "equation_Prims.pos",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_correspondence_Prims.pow2.fuel_instrumented", "int_typing",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "refinement_interpretation_Tm_refine_f048236b5f8051f83b495ea5eaa6127b",
        "token_correspondence_Prims.pow2.fuel_instrumented"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.felem",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.felem_wide",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.seqelem",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.seqelem_wide",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.climb_size",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.climb_size",
      2,
      2,
      1,
      [
        "@query", "b2t_def", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt32.n",
        "equation_Hacl.Bignum.Constants.limb_size",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.lemma_prime_limb_size",
      1,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.len",
        "equation_Hacl.Bignum.Constants.limb_size",
        "equation_Hacl.Bignum.Parameters.len", "primitive_Prims.op_Multiply",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.lemma_prime_limb_size",
      2,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.len",
        "equation_Hacl.Bignum.Constants.limb_size",
        "equation_Hacl.Bignum.Constants.prime",
        "equation_Hacl.Bignum.Parameters.len",
        "equation_Hacl.Bignum.Parameters.prime",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.v",
      1,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.lemma_limb_injectivity",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e5e09b9db68eee1607b2e382893a4997",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.lemma_limb_injectivity",
      2,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.lemma_limb_injectivity",
      3,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.lemma_limb_injectivity",
      4,
      2,
      1,
      [
        "@query", "data_elim_Hacl.UInt64.Mk", "equation_FStar.UInt64.t",
        "equation_FStar.UInt64.v", "equation_Hacl.Bignum.Constants.limb",
        "equation_Hacl.Bignum.Parameters.limb",
        "equation_Hacl.Bignum.Parameters.v", "equation_Hacl.UInt64.t",
        "equation_Hacl.UInt64.v", "fuel_guarded_inversion_FStar.UInt64.t_",
        "fuel_guarded_inversion_Hacl.UInt64.t_",
        "proj_equation_FStar.UInt64.Mk_v", "proj_equation_Hacl.UInt64.Mk_v",
        "unit_typing"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_zero",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_one",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_add",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_add",
      2,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_add_mod",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_add_mod",
      2,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_sub",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_sub",
      2,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_sub_mod",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_sub_mod",
      2,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_mul",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_mul",
      2,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_mul_mod",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_mul_mod",
      2,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_logand",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e5e09b9db68eee1607b2e382893a4997",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_logand",
      2,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_logxor",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e5e09b9db68eee1607b2e382893a4997",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_logxor",
      2,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_logor",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e5e09b9db68eee1607b2e382893a4997",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_logor",
      2,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_lognot",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e5e09b9db68eee1607b2e382893a4997",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_lognot",
      2,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_shift_right",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_shift_right",
      2,
      2,
      1,
      [
        "@query", "b2t_def", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_FStar.UInt32.n",
        "equation_FStar.UInt32.v",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "lemma_FStar.Buffer.lemma_size", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_03d0bed5c0733099844f268aecd0836d",
        "typing_FStar.UInt32.v"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_shift_left",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_shift_left",
      2,
      2,
      1,
      [
        "@query", "equation_FStar.UInt.uint_t", "equation_FStar.UInt32.n",
        "equation_FStar.UInt32.v",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "lemma_FStar.Buffer.lemma_size", "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_03d0bed5c0733099844f268aecd0836d",
        "typing_FStar.UInt32.v"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_eq_mask",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e5e09b9db68eee1607b2e382893a4997",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_eq_mask",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_eq_mask",
      3,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e5e09b9db68eee1607b2e382893a4997",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_eq_mask",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_eq_mask",
      5,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_gte_mask",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_gte_mask",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_gte_mask",
      3,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_gt_mask",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_gt_mask",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_gt_mask",
      3,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_lt_mask",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_lt_mask",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_lt_mask",
      3,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_lte_mask",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_lte_mask",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_lte_mask",
      3,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_to_byte",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_to_byte",
      2,
      2,
      1,
      [ "@query", "projection_inverse_BoxInt_proj_0" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.byte_to_limb",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int", "equation_FStar.UInt8.n",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size", "equation_Hacl.UInt8.n",
        "haseqTm_refine_e9c4f78ddd207d339c4640813ef45e10",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_zero",
      2,
      2,
      1,
      [
        "@query", "b2t_def", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Parameters.v", "equation_Prims.nat",
        "equation_Prims.pos",
        "fuel_correspondence_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt64.n", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "refinement_interpretation_Tm_refine_f048236b5f8051f83b495ea5eaa6127b",
        "typing_Prims.pow2"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_one",
      2,
      2,
      1,
      [
        "@query", "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.limb",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.limb_zero",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.t", "equation_Prims.nat", "equation_Prims.pos",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_correspondence_Prims.pow2.fuel_instrumented",
        "fuel_irrelevance_Prims.pow2.fuel_instrumented",
        "function_token_typing_Hacl.Bignum.Parameters.limb_zero",
        "int_typing", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_03d0bed5c0733099844f268aecd0836d",
        "refinement_interpretation_Tm_refine_72320aff465f8f5be1a60f01274a9fe3",
        "refinement_interpretation_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "refinement_interpretation_Tm_refine_f048236b5f8051f83b495ea5eaa6127b",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_Hacl.Bignum.Parameters.v"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_add",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.limb",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.n", "equation_Hacl.UInt64.t",
        "fuel_guarded_inversion_Hacl.UInt64.t_",
        "refinement_interpretation_Tm_refine_3275a2da1f8e2b4c22fe314597a6524c"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_add_mod",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size", "equation_Hacl.UInt64.n"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_sub",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.UInt.sub", "equation_FStar.UInt64.n",
        "equation_FStar.UInt64.sub", "equation_FStar.UInt64.v",
        "equation_Hacl.Bignum.Constants.limb",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.n", "equation_Hacl.UInt64.sub",
        "equation_Hacl.UInt64.t", "equation_Hacl.UInt64.v",
        "fuel_guarded_inversion_Hacl.UInt64.t_",
        "proj_equation_FStar.UInt64.Mk_v", "proj_equation_Hacl.UInt64.Mk_v",
        "projection_inverse_FStar.UInt64.Mk_v",
        "projection_inverse_Hacl.UInt64.Mk_v",
        "refinement_interpretation_Tm_refine_14509ea7865f74cc0fb671b704a3f76c"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_sub_mod",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size", "equation_Hacl.UInt64.n"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_mul",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.limb",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.n", "equation_Hacl.UInt64.t",
        "fuel_guarded_inversion_Hacl.UInt64.t_",
        "refinement_interpretation_Tm_refine_4e2b27a5722df16a6c65472740cf25e4"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_mul_mod",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size", "equation_Hacl.UInt64.n"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_logand",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.UInt.logand",
        "equation_FStar.UInt64.logand", "equation_FStar.UInt64.n",
        "equation_FStar.UInt64.v",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.logand", "equation_Hacl.UInt64.v",
        "proj_equation_FStar.UInt64.Mk_v", "proj_equation_Hacl.UInt64.Mk_v",
        "projection_inverse_FStar.UInt64.Mk_v",
        "projection_inverse_Hacl.UInt64.Mk_v"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_logxor",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.UInt.logxor",
        "equation_FStar.UInt64.logxor", "equation_FStar.UInt64.n",
        "equation_FStar.UInt64.v",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.logxor", "equation_Hacl.UInt64.v",
        "proj_equation_FStar.UInt64.Mk_v", "proj_equation_Hacl.UInt64.Mk_v",
        "projection_inverse_FStar.UInt64.Mk_v",
        "projection_inverse_Hacl.UInt64.Mk_v"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_logor",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.UInt.logor", "equation_FStar.UInt64.logor",
        "equation_FStar.UInt64.n", "equation_FStar.UInt64.v",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.logor", "equation_Hacl.UInt64.v",
        "proj_equation_FStar.UInt64.Mk_v", "proj_equation_Hacl.UInt64.Mk_v",
        "projection_inverse_FStar.UInt64.Mk_v",
        "projection_inverse_Hacl.UInt64.Mk_v"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_lognot",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.UInt.lognot",
        "equation_FStar.UInt64.lognot", "equation_FStar.UInt64.n",
        "equation_FStar.UInt64.v",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.lognot", "equation_Hacl.UInt64.v",
        "proj_equation_FStar.UInt64.Mk_v", "proj_equation_Hacl.UInt64.Mk_v",
        "projection_inverse_FStar.UInt64.Mk_v",
        "projection_inverse_Hacl.UInt64.Mk_v"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_shift_right",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.limb",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.n", "equation_Hacl.UInt64.t",
        "fuel_guarded_inversion_Hacl.UInt64.t_"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_shift_left",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.limb",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.n", "equation_Hacl.UInt64.t",
        "fuel_guarded_inversion_Hacl.UInt64.t_"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_eq_mask",
      6,
      2,
      1,
      [
        "@query", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.limb",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.n", "equation_Hacl.UInt64.t",
        "fuel_guarded_inversion_Hacl.UInt64.t_"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_gte_mask",
      4,
      2,
      1,
      [
        "@query", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.limb",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.n", "equation_Hacl.UInt64.t",
        "fuel_guarded_inversion_Hacl.UInt64.t_"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_gt_mask",
      4,
      2,
      1,
      [
        "@query", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.limb",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.n", "equation_Hacl.UInt64.t",
        "fuel_guarded_inversion_Hacl.UInt64.t_"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_lt_mask",
      4,
      2,
      1,
      [
        "@query", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.limb",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.n", "equation_Hacl.UInt64.t",
        "fuel_guarded_inversion_Hacl.UInt64.t_"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_lte_mask",
      4,
      2,
      1,
      [
        "@query", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.limb",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.n", "equation_Hacl.UInt64.t",
        "fuel_guarded_inversion_Hacl.UInt64.t_"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_to_byte",
      3,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.limb",
        "equation_Hacl.Bignum.Parameters.limb",
        "equation_Hacl.Bignum.Parameters.v", "equation_Hacl.UInt64.t",
        "fuel_guarded_inversion_Hacl.UInt64.t_",
        "primitive_Prims.op_Equality", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_to_byte",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.byte_to_limb",
      2,
      2,
      1,
      [ "@query", "equation_Hacl.Bignum.Parameters.v" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.w",
      1,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.w",
      2,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star", "equation_FStar.UInt128.n",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.n",
        "function_token_typing_Hacl.Bignum.Parameters.wide_n",
        "int_inversion", "primitive_Prims.op_Multiply",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.lemma_wide_injectivity",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e5e09b9db68eee1607b2e382893a4997",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.lemma_wide_injectivity",
      2,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.lemma_wide_injectivity",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.lemma_wide_injectivity",
      4,
      2,
      1,
      [
        "@query", "data_elim_Hacl.UInt128.Mk", "equation_FStar.UInt128.t",
        "equation_FStar.UInt128.v", "equation_Hacl.Bignum.Constants.wide",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide", "equation_Hacl.UInt128.t",
        "equation_Hacl.UInt128.v", "fuel_guarded_inversion_FStar.UInt128.t_",
        "fuel_guarded_inversion_Hacl.UInt128.t_",
        "proj_equation_FStar.UInt128.Mk_v",
        "proj_equation_Hacl.UInt128.Mk_v", "unit_typing"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_zero",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_one",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_add",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_add",
      2,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_add_mod",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_add_mod",
      2,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_sub",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_sub",
      2,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_sub_mod",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_sub_mod",
      2,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_logand",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e5e09b9db68eee1607b2e382893a4997",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_logand",
      2,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_logxor",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e5e09b9db68eee1607b2e382893a4997",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_logxor",
      2,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_logor",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e5e09b9db68eee1607b2e382893a4997",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_logor",
      2,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_lognot",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e5e09b9db68eee1607b2e382893a4997",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_lognot",
      2,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_shift_right",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_shift_right",
      2,
      2,
      1,
      [
        "@query", "b2t_def", "equation_FStar.Mul.op_Star",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt32.n", "equation_FStar.UInt32.v",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "lemma_FStar.Buffer.lemma_size", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_03d0bed5c0733099844f268aecd0836d",
        "typing_FStar.UInt32.v"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_shift_left",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_shift_left",
      2,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt32.n", "equation_FStar.UInt32.v",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "lemma_FStar.Buffer.lemma_size", "primitive_Prims.op_Multiply",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_03d0bed5c0733099844f268aecd0836d",
        "typing_FStar.UInt32.v"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_eq_mask",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e5e09b9db68eee1607b2e382893a4997",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_eq_mask",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_eq_mask",
      3,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e5e09b9db68eee1607b2e382893a4997",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_eq_mask",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_eq_mask",
      5,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_gte_mask",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_gte_mask",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_gte_mask",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_gt_mask",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_gt_mask",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_gt_mask",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_lt_mask",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_lt_mask",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_lt_mask",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_lte_mask",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_lte_mask",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_lte_mask",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.mul_wide",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_to_wide",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int", "equation_FStar.Mul.op_Star",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e9c4f78ddd207d339c4640813ef45e10",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_to_limb",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_to_limb",
      2,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.uint64_to_limb",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "haseqTm_refine_e9c4f78ddd207d339c4640813ef45e10",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.uint64_to_limb",
      2,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.word_size",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_zero",
      2,
      2,
      1,
      [
        "@query", "equation_FStar.UInt.uint_t", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.limb",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.limb_zero",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.t",
        "function_token_typing_Hacl.Bignum.Parameters.limb_zero",
        "refinement_interpretation_Tm_refine_03d0bed5c0733099844f268aecd0836d",
        "refinement_interpretation_Tm_refine_72320aff465f8f5be1a60f01274a9fe3",
        "typing_Hacl.Bignum.Parameters.v"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_one",
      2,
      2,
      1,
      [
        "@query", "equation_FStar.UInt.uint_t", "equation_FStar.UInt64.n",
        "equation_Hacl.Bignum.Constants.limb",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.limb_one",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt64.t",
        "function_token_typing_Hacl.Bignum.Parameters.limb_one",
        "refinement_interpretation_Tm_refine_03d0bed5c0733099844f268aecd0836d",
        "refinement_interpretation_Tm_refine_b6cddb0925a26b22bc7c5884d275beb2",
        "typing_Hacl.Bignum.Parameters.v"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_add",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star", "equation_FStar.UInt128.n",
        "equation_Hacl.Bignum.Constants.wide",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.n", "equation_Hacl.UInt128.t",
        "fuel_guarded_inversion_Hacl.UInt128.t_",
        "function_token_typing_Hacl.Bignum.Parameters.wide_n",
        "int_inversion", "primitive_Prims.op_Multiply",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_3c9c54364b27ff286f1c505702c3d1c3"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_add_mod",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star", "equation_FStar.UInt128.n",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.n",
        "function_token_typing_Hacl.Bignum.Parameters.wide_n",
        "int_inversion", "primitive_Prims.op_Multiply",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_sub",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star", "equation_FStar.UInt.sub",
        "equation_FStar.UInt128.n", "equation_FStar.UInt128.sub",
        "equation_FStar.UInt128.v", "equation_Hacl.Bignum.Constants.wide",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.n", "equation_Hacl.UInt128.sub",
        "equation_Hacl.UInt128.t", "equation_Hacl.UInt128.v",
        "fuel_guarded_inversion_Hacl.UInt128.t_",
        "function_token_typing_Hacl.Bignum.Parameters.wide_n",
        "int_inversion", "primitive_Prims.op_Multiply",
        "proj_equation_FStar.UInt128.Mk_v",
        "proj_equation_Hacl.UInt128.Mk_v",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.UInt128.Mk_v",
        "projection_inverse_Hacl.UInt128.Mk_v",
        "refinement_interpretation_Tm_refine_f73323885f41d0b28003c2afa6354d96"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_sub_mod",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star", "equation_FStar.UInt128.n",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.n",
        "function_token_typing_Hacl.Bignum.Parameters.wide_n",
        "int_inversion", "primitive_Prims.op_Multiply",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_logand",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_FStar.UInt128.logand", "equation_FStar.UInt128.n",
        "equation_FStar.UInt128.v",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.logand", "equation_Hacl.UInt128.v",
        "function_token_typing_Hacl.Bignum.Parameters.wide_n",
        "int_inversion", "primitive_Prims.op_Multiply",
        "proj_equation_FStar.UInt128.Mk_v",
        "proj_equation_Hacl.UInt128.Mk_v",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.UInt128.Mk_v",
        "projection_inverse_Hacl.UInt128.Mk_v"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_logxor",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_FStar.UInt128.logxor", "equation_FStar.UInt128.n",
        "equation_FStar.UInt128.v",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.logxor", "equation_Hacl.UInt128.v",
        "function_token_typing_Hacl.Bignum.Parameters.wide_n",
        "int_inversion", "primitive_Prims.op_Multiply",
        "proj_equation_FStar.UInt128.Mk_v",
        "proj_equation_Hacl.UInt128.Mk_v",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.UInt128.Mk_v",
        "projection_inverse_Hacl.UInt128.Mk_v"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_logor",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_FStar.UInt128.logor", "equation_FStar.UInt128.n",
        "equation_FStar.UInt128.v",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.logor", "equation_Hacl.UInt128.v",
        "function_token_typing_Hacl.Bignum.Parameters.wide_n",
        "int_inversion", "primitive_Prims.op_Multiply",
        "proj_equation_FStar.UInt128.Mk_v",
        "proj_equation_Hacl.UInt128.Mk_v",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.UInt128.Mk_v",
        "projection_inverse_Hacl.UInt128.Mk_v"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_lognot",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star",
        "equation_FStar.UInt128.lognot", "equation_FStar.UInt128.n",
        "equation_FStar.UInt128.v",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.lognot", "equation_Hacl.UInt128.v",
        "function_token_typing_Hacl.Bignum.Parameters.wide_n",
        "int_inversion", "primitive_Prims.op_Multiply",
        "proj_equation_FStar.UInt128.Mk_v",
        "proj_equation_Hacl.UInt128.Mk_v",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.UInt128.Mk_v",
        "projection_inverse_Hacl.UInt128.Mk_v"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_shift_right",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star", "equation_FStar.UInt128.n",
        "equation_Hacl.Bignum.Constants.wide",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.n", "equation_Hacl.UInt128.t",
        "fuel_guarded_inversion_Hacl.UInt128.t_",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_shift_left",
      3,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star", "equation_FStar.UInt128.n",
        "equation_Hacl.Bignum.Constants.wide",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.n", "equation_Hacl.UInt128.t",
        "fuel_guarded_inversion_Hacl.UInt128.t_",
        "function_token_typing_Hacl.Bignum.Parameters.wide_n",
        "int_inversion", "primitive_Prims.op_Multiply",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_eq_mask",
      6,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star", "equation_FStar.UInt128.n",
        "equation_Hacl.Bignum.Constants.wide",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.n", "equation_Hacl.UInt128.t",
        "fuel_guarded_inversion_Hacl.UInt128.t_",
        "function_token_typing_Hacl.Bignum.Parameters.wide_n",
        "int_inversion", "primitive_Prims.op_Multiply",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_gte_mask",
      4,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star", "equation_FStar.UInt128.n",
        "equation_Hacl.Bignum.Constants.wide",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.n", "equation_Hacl.UInt128.t",
        "fuel_guarded_inversion_Hacl.UInt128.t_",
        "function_token_typing_Hacl.Bignum.Parameters.wide_n",
        "int_inversion", "primitive_Prims.op_Multiply",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_gt_mask",
      4,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star", "equation_FStar.UInt128.n",
        "equation_Hacl.Bignum.Constants.wide",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.n", "equation_Hacl.UInt128.t",
        "fuel_guarded_inversion_Hacl.UInt128.t_",
        "function_token_typing_Hacl.Bignum.Parameters.wide_n",
        "int_inversion", "primitive_Prims.op_Multiply",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_lt_mask",
      4,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star", "equation_FStar.UInt128.n",
        "equation_Hacl.Bignum.Constants.wide",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.n", "equation_Hacl.UInt128.t",
        "fuel_guarded_inversion_Hacl.UInt128.t_",
        "function_token_typing_Hacl.Bignum.Parameters.wide_n",
        "int_inversion", "primitive_Prims.op_Multiply",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_lte_mask",
      4,
      2,
      1,
      [
        "@query", "equation_FStar.Mul.op_Star", "equation_FStar.UInt128.n",
        "equation_Hacl.Bignum.Constants.wide",
        "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.wide",
        "equation_Hacl.Bignum.Parameters.wide_n",
        "equation_Hacl.Bignum.Parameters.word_size",
        "equation_Hacl.UInt128.n", "equation_Hacl.UInt128.t",
        "fuel_guarded_inversion_Hacl.UInt128.t_",
        "function_token_typing_Hacl.Bignum.Parameters.wide_n",
        "int_inversion", "primitive_Prims.op_Multiply",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.mul_wide",
      2,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.w"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.limb_to_wide",
      2,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.w"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.wide_to_limb",
      3,
      2,
      1,
      [
        "@query", "equation_Hacl.Bignum.Constants.word_size",
        "equation_Hacl.Bignum.Parameters.limb_n",
        "equation_Hacl.Bignum.Parameters.v",
        "equation_Hacl.Bignum.Parameters.w",
        "equation_Hacl.Bignum.Parameters.word_size"
      ],
      0
    ],
    [
      "Hacl.Bignum.Parameters.uint64_to_limb",
      3,
      2,
      1,
      [ "@query", "equation_Hacl.Bignum.Parameters.v" ],
      0
    ]
  ]
]